def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33

//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
//
//    ndkVersion flutter.ndkVersion
//
//    signingConfigs {
//        release {
//            keyAlias 'eesl@sampark'
//            keyPassword 'eesl@sampark'
//            storeFile file('D:/new_eesl/EESL_sampark/android/app/eesl@samparkapp.jks')
//            storePassword 'eesl@sampark'
//        }


//    lintOptions {
//        disable 'InvalidPackage'
//        disable 'Instantiatable'
//        checkReleaseBuilds false
//        abortOnError false
//    }

    defaultConfig {
        applicationId "com.eeslsampark.app"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
//        release {
//            minifyEnabled false
//            shrinkResources false
//            debuggable false
//            useProguard true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
//        }
//        debug {
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
    }
}

flutter {
    source '../..'
}
